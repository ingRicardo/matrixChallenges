start = 10000
A=start
start++

array1 => 0 1 2 3 4 5 6 7 8 9 

array2 => 1 0 0 0 0 

if array1[i] == 0 && j == 0 && array2[j] == 1
starts from 1
arry2[i] = array1[i]


if array1[i] != 0 && j != 0 && array2[j] != 1
    arry2[j] = array1[i]

loop array1 to 9
    array1[0]

10000
11000
12000
13000
14000 

A =13456
Bi=33516
Ci= 2
Di= 2
===========
https://www.codesdope.com/blog/article/generating-permutations-of-all-elements-of-an-arra/ 

start = 10,000
end = 99,999
A =? find number   13456
A size = 5
permutation of 5 elements
each element needs to be from 0-9
0,   1,  2,  3,  4 
1-9,0-9,0-9,0-9,0-9
Bi= 33516
Ci=2   match with each other
Di=2   match independent of the place
A =13456
Bi=33516

sol1
R=
step 1: break Bi into individual digits and save it on an int array
    int bi = 33516;
    in bitmp = bi;
    int size =5;
    int number = new int[bitmp];
    int i=0;
    while (bitmp != 0)
    {
        cout << bitmp%10 << " ";
        bitmp /= 10;
        number[i] = bitmp;
        i+=1;
    }

step 2: 
    bi = 33516;
    loop from 10,000 to 99,999
        10000  10001  10002  10003 ... 10009    
loop j-5
   loop i-9   
        if (number[j] == i)
    0123456789
  0    x            
  1    x      
  2      x     
  3  x          
  4       x        

 B 33516
 A 13456
    x  x 
